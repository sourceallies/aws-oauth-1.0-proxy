{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Parameters": {
    "ClientKey" : {
      "Type" : "String"
    },
    "ClientSecret" : {
      "Type" : "String"
    },
    "BucketName" : {
      "Type" : "String"
    },
    "ApiUrl": {
      "Type": "String"
    },
    "OAuthCustomHeaders": {
      "Type": "String"
    },
    "AuthorizeCallbackUri": {
      "Type": "String"
    },
    "BasePath" : {
        "Type": "String"
    }
  },
  "Resources" : {
    "OAuthFirstLegLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": {
          "Bucket" : {
            "Ref" : "BucketName"
          },
          "Key": "artifact.zip"
        },
        "Description": "OAuth First Leg Lambda Function",
        "FunctionName": "oauth-first-leg",
        "Handler": "index.firstLegHandler",
        "Role": {
          "Fn::Sub" : "arn:aws:iam::${AWS::AccountId}:role/basic-lambda-execution-role"
        },
        "Policies": [ "AWSLambdaFullAccess" ],
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "MemorySize": 256,
        "Events": {
          "PostResource":{
            "Type" : "Api",
            "Properties" : {
              "Path" : "/firstLegAuth",
              "Method" : "post"
            }
          }
        },
        "Environment" : {
          "Variables" : {
            "CLIENT_KEY" : {
              "Ref" : "ClientKey"
            },
            "CLIENT_SECRET" : {
              "Ref" : "ClientSecret"
            },
            "API_URL": {
              "Ref": "ApiUrl"
            },
            "OAUTH_CUSTOM_HEADERS": {
              "Ref": "OAuthCustomHeaders"
            },
            "AUTHORIZE_CALLBACK_URI": {
              "Ref": "AuthorizeCallbackUri"
            }
          }
        }
      }
    },
    "OAuthThirdLegLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": {
          "Bucket" : {
            "Ref" : "BucketName"
          },
          "Key": "artifact.zip"
        },
        "Description": "OAuth Third Leg Lambda Function",
        "FunctionName": "oauth-third-leg",
        "Handler": "index.thirdLegHandler",
        "Role": {
          "Fn::Sub" : "arn:aws:iam::${AWS::AccountId}:role/basic-lambda-execution-role"
        },
        "Policies": [ "AWSLambdaFullAccess" ],
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "MemorySize": 256,
        "Events": {
          "PostResource":{
            "Type" : "Api",
            "Properties" : {
              "Path" : "/thirdLegAuth",
              "Method" : "post"
            }
          }
        },
        "Environment" : {
          "Variables" : {
            "CLIENT_KEY" : {
              "Ref" : "ClientKey"
            },
            "CLIENT_SECRET" : {
              "Ref" : "ClientSecret"
            },
            "API_URL": {
              "Ref": "ApiUrl"
            },
            "OAUTH_CUSTOM_HEADERS": {
              "Ref": "OAuthCustomHeaders"
            },
            "AUTHORIZE_CALLBACK_URI": {
              "Ref": "AuthorizeCallbackUri"
            }
          }
        }
      }
    },
    "OAuthSignRequestPostLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": {
          "Bucket" : {
            "Ref" : "BucketName"
          },
          "Key": "artifact.zip"
        },
        "Description": "OAuth Sign Request Post Lambda Function",
        "FunctionName": "oauth-sign-request-post",
        "Handler": "index.oAuthSignRequestPost",
        "Role": {
          "Fn::Sub" : "arn:aws:iam::${AWS::AccountId}:role/basic-lambda-execution-role"
        },
        "Policies": [ "AWSLambdaFullAccess" ],
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "MemorySize": 256,
        "Events": {
          "PostResource":{
            "Type" : "Api",Customer
            "Properties" : {
              "Path" : "/oAuthSignRequest",
              "Method" : "post"
            }
          }
        },
        "Environment" : {
          "Variables" : {
            "CLIENT_KEY" : {
              "Ref" : "ClientKey"
            },Customer
            "CLIENT_SECRET" : {
              "Ref" : "ClientSecret"
            },
            "OAUTH_CUSTOM_HEADERS": {
              "Ref": "OAuthCustomHeaders"
            },
            "AUTHORIZE_CALLBACK_URI": {
              "Ref": "AuthorizeCallbackUri"
            }
          }
        }
      }
    },
    "OAuthSignRequestGetLambda": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": {
          "Bucket" : {
            "Ref" : "BucketName"
          },
          "Key": "artifact.zip"
        },
        "Description": "OAuth Sign Request Get Lambda Function",
        "FunctionName": "oauth-sign-request-get",
        "Handler": "index.oAuthSignRequestGet",
        "Role": {
          "Fn::Sub" : "arn:aws:iam::${AWS::AccountId}:role/basic-lambda-execution-role"
        },
        "Policies": [ "AWSLambdaFullAccess" ],
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "MemorySize": 256,
        "Events": {
          "GetResource":{
            "Type" : "Api",
            "Properties" : {
              "Path" : "/oAuthSignRequest",
              "Method" : "get"
            }
          }
        },
        "Environment" : {
          "Variables" : {
            "CLIENT_KEY" : {
              "Ref" : "ClientKey"
            },
            "CLIENT_SECRET" : {
              "Ref" : "ClientSecret"
            },
            "OAUTH_CUSTOM_HEADERS": {
              "Ref": "OAuthCustomHeaders"
            },
            "AUTHORIZE_CALLBACK_URI": {
              "Ref": "AuthorizeCallbackUri"
            }
          }
        }
      }
    },
    "CloudFront": {
        "Type" : "AWS::CloudFront::Distribution",
        "Properties": {
            "DistributionConfig": {
                "Origins" : [ {
                        "DomainName" : {"Bucket" : {"Ref" : "BucketName" }},
                        "Id" : "OriginId",
                        "S3OriginConfig" : {
                            "OriginAccessIdentity" : "origin-access-identity/cloudfront/E127EXAMPLE51Z"
                        }
                    }],
                "DefaultCacheBehavior": {
                    "ForwardedValues": {
                        "QueryString": false,
                    },
                    "TargetOriginId": "OrignId",
                    "ViewerProtocolPolicy": "allow-all"
                },
                "Enabled": true
            }
        }
    },
    "Certificate": {
        "Type": "AWS::CertificateManager::Certificate",
        "Properties": {
            "DomainName": "agpoint.dev.sourceallies.com",
            "DomainValidationOptions": {
                "DomainName": ["agpoint.dev.sourceallies.com"],
                "ValidationDomain": "sourceallies.com"
            }
        }
    },
    "BasePathMapping": {
        "Type" : "AWS::ApiGateway::BasePathMapping",
        "Properties": {
            "BasePath": {"Ref": "BasePath"},
            "RestApiId": {"Fn::ImporteValue": {"Fn:Join": { ["", [{"Ref": {"BucketName"}}, "ApiId"]]}}}
        }
    },
    "DNSEntry": {
        "Type": "AWS::Route53::RecordSet",
        "Properties" : {
            "Type": "A",
            "HostedZoneName": "dev.sourceallies.com",
            "Name": "deedee.dev.sourceallies.com",
            "AliasTarget": {
                "DNSName": {"GetAtt": "CloudFront.DomainName"},
                "HostedZoneId": "Z2FDTNDATAQYW2"
            }
        }
    }
  },
  "Outputs" : {
    "ApiURL" : {
      "Description" : "API endpoint for the lambdas",
      "Value" : {
        "Fn::Sub" : "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    }
  }
}
